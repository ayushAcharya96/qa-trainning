QA & QC & QE
-----------

QA VS QC
---------

pillors of company

p - people --- QC (Testing)
p - process ---- QA
p - product

QA is process related.
QC is actual testing of the software.

QA focuses on building in quality.
QC focuses on testing for quality.

QA is preventing defects.
QC is detecting defects.

QA is process related.
QC is product orieted.

QA is for entire life cycle.
QC is for testing part of SDLC.

QE ---> Quality Engineering
---------------------------

Software Engineer/SE (Write code for developing software)
Quality Engineer/QE (Write code for testing software) (Automation Testers)

Levels of Software Testing
---------------------------
1. Unit Testing
2. Integration Testing
3. System Testing
4. User Acceptance Testing (UAT)


Unit Testing
------------
- A unit is a single component or module of a software.
- Unit testing conducts on a single program or single module.
- Unit Testing is white box testing technique.
- Unit Testing is conducted by the developers.

Unit Testing techniques:
------------------------
    - Basis path testing (test if every line of code is executed)
    - Control structure testing
        - Conditional coverage
        - loops coverage
    - mutation testing (testing code with multiple set of data)


Integration Testing
-------------------
- Integration testing performed between 2 or more modules.
- Integration testing focuses on checking data communication bewteen multiple modules.
- Integrated testing is white box testing technique.

Types of Integration testing:
-----------------------------
1. Incremental Integration Testing
2. Non Incremental Integration Testing
3. Sandwich Approach

Incremental Integration Testing
-------------------------------
    - Incrementally adding the modules and testing the data flow between the modules

    2 approaches:
        - Top down approach
            - Incrementally adding the modules and testing the data flow between the modules. And ensure the module added is the child of previous module.

            eg - In gmail, 
                compose mail -> sent items -> deleted items
        - Bottom Up approach
            Incrementally adding the modules and testing the data flow between the modules. Ensure the module added is the parent of the previous module.

        - Sandwich Approach (Hybrid Approach)
            Combination of both

Non Incremental Integration Testing
-----------------------------------
    - Integrating all modules at once

    drawbacks:
        - We might miss data flow between some of the modules.
        - If you find any defect we can't understand the root cause of defect.


System Testing (will be discussed in detail in later sessions)
----------------------------------------------------
    - Testing overall functionality of the application with respective client requirement
    - It is a black box testing technique.
    - This testing is conducted by testing team.
    - After completion of component and integration level testing's we start system testing.
    - Before conducting system testing we should know the customer requirements.

    - System Testing focuses on below aspects:
        - User Interface Testing (GUI)
        - Functional Testing
        - Non-Functional Testing (Installation testing, Compatibility testing, performance testing, security testing)
            (seperate dedicated testers are used)
        - Usability Testing
            (documents, user manual, help menu in Apps, user friendlyness)

User Acceptance Testing (UAT):
------------------------------

After completion of system testing UAT team conducts acceptance testing in twe level
-Alpha testing (Testing in dev environment)
-Beta Testing (Testing in live environment)

