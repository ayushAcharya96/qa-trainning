Regression Testing
------------------
- Testing conducts on modified build to make sure there will not be impact on existing functionality because of changes like adding/deleting/modifying features.

Unit Regresstion Testing:
-------------------------
    - Testing only the changes/modifications done by the developer.

Regional Regression Testing:
----------------------------
    - Testing the modified module along with the impacted modules.
    - Impact Analysis meeting conducts to identify impacted modules with QA & Dev.

    Impact Analysis (Interview Question)
        - During impact analysis meeting, we identify impacts because of adding, deleting, modifying functionality or bug fixes.

Full Regression:
----------------
    - Testing the main feature and remaining part of the application.
    - Ex: Dev has done changes in many modules, instead of identifying impacted modules, we perform one round of full regression.


Re-Testing
-----------
    - Whenever the developer fixed a bug, tester will test the bug fix is called retesting.
    - Tester close the bug if it worked otherwise re-open and send to developer.
    - To ensure that the defects which found and posted in the earlier build were fixed or not in the current build.
    - Example:
        - Build 1.0 was released. Test team found some defect (Defect id 1.0.1, 1.0.2)
        - Build 1.1 was released, now testing the defects 1.0.1 and 1.0.2.
    
Example: Re-Testing Vs Regression Testing
- An application under test has three modules namely Admin, Purchase and Finance.
    Admin ---> Purchase ---> Finance

- Finance module depends on Purchase.
- If a tester found a bug on Purchase module and posted. Once the bug is fixed, the tester needs to to Retesting to verify whether the bug related to the purchase is fixed or not and also tester needs to do regression testing to test the finance module which depends on the purchase module.


Smoke Testing and Sanity Testing 
---------------------------------
- Smoke and sanity testing comes into the picture after the build release.

Smoke Testing
--------------
- Build verification test.
- Smoke Test is done to make sure the build we received from the development team is testable/stable or not.
- Smoke Testing is performed by both Developers and Testers.
- Smoke Testing, build may be either stable or unstable.
- It is done on initial builds.
- It is a part of basic testing.
- Usually it is done every time there is a new build release.


Sanity Testing
---------------
- Sanity Test is done during the release phase to check for the main functionalities of the application without going deeper.
- Sanity Testing is performed by Testers alone.
- Sanity Testing, build is relatively stable.
- It is done on stable builds.
- It is a part of regression testing.
- It is planned when there is no enough time to do in-depth testing.

Exploratory Testing
--------------------
- We have to explore the application, understand completely and test.
- Understanding the application, identify all possible scenarios, document it then use it for testing.
- We do exploratory testing when the application is ready but there is no requirement.
- Test engineer will do exploratory testing when there is no requirement.

Drawbacks:
------------
    - You might misunderstand any features as a bug (or) any bug as a feature since you do not have requirement.
    - Time consuming.
    - If there is any bug in application, you will never know about it.

Adhoc Testing
--------------
- Testing applicatiton randomly without any test cases or any business requirement document.
- Adhoc testing is an informal testing type with an aim to break the system.
- Tester should have knowledge of application even thou he doesn't have requirements/test cases.
- This testing is usually an unplanned activity.


Monkey/Gorrila Testing
-----------------------
- Testing application randomly without any test cases or any business requirement document.
- Adhoc testing is an informal testing type with an aim to break the system.
- Tester do not have knowledge of application.
- Suitable for gaming application.

Positive Testing
-----------------
- Testing the application with valid inputs is called Positive Testing.
- checks whether an application behaves as expected with positive inputs.

Negative Testing
-----------------
- Testing the application with invalid inputs is called Negative Testing.
- checks whether an application behaves as expected with negative inputs.

    Requirements:
        - For example if a text box is listed as a feature and in FRS and in FRS it is mentioned as Text box accepts 6 - 20 characters and only alphabets.

    Positive Test Cases:
        - Text box accepts 6 characters.
        - Text box accepts upto 20 characters.
        - Text box accepts any value between 6-20 char lenght.
        - Text box accepts all alphabets.

    Negative Test Cases:
        - Text box should not accept less than 6 characters.
        - Text box should not accept more than 20 characters.
        - Text box should not accept special characters.
        - Text box should not accept numerical.

End-To-End Testing
-------------------
- Testing all overll functionalities of the system including the data integration among all the modules is called end-to-end testing.

Login--->Add Customer--->Delete Customer--->logout
                     --->Edit Customer


Globalization and Localization Testing
---------------------------------------

Globalization/Internationalization(I18N) Testing
------------------------------------------------
- Performed to ensure the system or software application can run in any culture or local environment.
- Different aspects of the software application are tested to ensure that it supports every language and different attributes.
- It tests the different currenty formats, mobile number formats and address formats are supported by the application.
- For example, Facebook.com supports many of the languages and it can be accessed by people of different countries. Hence it is globalized product.

Localization Testing
--------------------
- Performed to check system or software application for a specific geographical and cultural environment.
- Localized product only supports the specific kind of language and is usable only in specific region.
- It tests the specific currency format, mobile format and address format is working properly or not.
- For example, Baidu.com supports only the Chinese language and can be accessed only by people of few countries. Hence it is  a localized product.

